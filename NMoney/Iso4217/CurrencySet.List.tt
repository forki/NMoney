<#@ template language="C#" hostspecific="True" Debug="true"
#><#@ assembly name="System.Core" 
#><#@ import namespace="System" 
#><#@ import namespace="System.Collections.Generic" 
#><#@ import namespace="System.IO" 
#><#@ import namespace="System.Linq" 
#><#@ include file="templates\Iso4217table.ttinclude"
#><#
	var xmlEntries = XmlCurrencyEntries.Load(Host.ResolvePath("doc/list_one.xml"));
	var symbols = CurrencySymbols.Load(Host.ResolvePath("doc/unicodeSymbols.csv"));
	var codes = xmlEntries.List.Where(_ => _.Code != null).Select(_ => _.Code).Distinct().ToList();
#>
using System;
using System.Collections.Generic;

namespace NMoney.Iso4217
{
	public partial class CurrencySet
	{
<#		foreach(var xmlEntry in xmlEntries.List.Where(_ => _.Code != null).Distinct().OrderBy(_ => _.Code)) {
#>		/// <summary>
		/// <#= xmlEntry.Name #>
		/// </summary>
		public static Currency <#= xmlEntry.Code #> => <#= xmlEntry.Code #>Cache.Instance;
<# } #>

		internal static Currency[] GetAll()
		{
			return new Currency[] {
<# foreach(string code in codes) {
#>				<#= code #>,
<# }
#>			};
		}
	}
<#		foreach(var xmlEntry in xmlEntries.List.Where(_ => _.Code != null).Distinct().OrderBy(_ => _.Code)) {
#>

	internal class <#= xmlEntry.Code #>Cache
	{
		internal static readonly Currency Instance = new Currency("<#= xmlEntry.Code #>", "<#= symbols.Get(xmlEntry.Code) #>", <#= xmlEntry.NumCode #>, <#= xmlEntry.MinorUnit #>);
	}
<# } #>
}
